// Generated by Selenium IDE
package webserver.tests.selenium;

import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import webserver.server.WebServer;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class SiteUpTest {
	private static final int PORT = 10077;
	private static final String WEB_ROOT = "./htdocs/";
	private static final String MAINTENANCE_ROT = "./htdocs/";
	private WebServer webServer;
	private Thread webServerThread;

	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;
	@Before
	public void setUp() {
		System.setProperty("webdriver.gecko.driver", "d:\\freeware\\programming\\java-testing\\geckodriver\\geckodriver.exe");

		driver = new FirefoxDriver();
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
		
		webServer = new WebServer();
		
		webServer.setPort(PORT);
		webServer.setWebRoot(WEB_ROOT);
		webServer.setMaintenanceRoot(MAINTENANCE_ROT);
		
		webServerThread = new Thread(){
			public void run(){								
				System.out.println("Thread Running");							
				
				webServer.startServer();
			}
		};
		webServerThread.start();
	}
	
	@After
	public void tearDown() throws Exception{
		driver.quit();
		
		webServer.stopServer();
		webServerThread.join();
	}
	
	@Test(timeout=60000)
	public void siteUp() {
		// Test name: SiteUp
		// Step # | name | target | value
		// 1 | open | / | 
		driver.get("http://127.0.0.1:" + PORT + "/");
		// 2 | assertText | css=body | 404 - Page not found
		assertThat(driver.findElement(By.cssSelector("body")).getText(), is("404 - Page not found"));
	}
}
